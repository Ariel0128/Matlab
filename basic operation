Assignment 2 - Your name and ID#
Submission instructions: 
Run your livescript then create a pdf using `Export to PDF' under `Save'.
Change the file name to `lastname_id#.pdf'
Submit your assignment in Blackboard, under `Assignment 2 submission'
Deadline: 5pm, 11th of June.
There are a few Matlab commands that have not been covered during the labs, so you may need to discover how to use them yourself using Matlab help features, or searching online.

Question 1 - Matlab basics (25pt)
Plot the following functions


Make the range of  from -2 to 2.
% Insert your code here
x = linspace(-2,2); % variable for the functions
f= exp(-x.^2/4).*cos(2*pi*x)   ;
%Plotting first function f(x)
plot(x,f);
xlabel('x' );
ylabel('y' );

Complete the following script for the second function
% Second function g(x)
x=linspace(-2,0); % Range of x from -2 to 0 
%g(x) for x<=0
g1= exp(x) ; 
%Plotting g(x) for x<=0
plot(x,g1) 
hold on
x=linspace(0,2); %Range of x from 0 to 2
%g(x) for x>0
g2= sin(2*pi*x)./x ;
%Plotting g(x) for x>0
plot( x,g2  )
xlabel('x');
ylabel('g(x)');
legend(  'when x<=0','when x>0' );
hold off

Question 2 - Analyzing Census Data (25pt)
1. Visualize the Population Change Over Time

Plot the US population data against the year.
years = (1900:10:2000);                                  % Time interval
pop = [75.995 91.972 105.711 123.203 131.669 ...         % Population Data
   150.697 179.323 213.212 228.505 250.633 265.422]

Plot the data by completing the script below.
plot(years,pop)                           % Plot the population data
title('US Population Data Against the Year ');
ylabel('Population ');
xlabel('years ')

2. Fitting the Data

Can we predict the US population in the year 2010? Let's try fitting the data with polynomials. We'll use the MATLAB polyfit function to get the coefficients. 
The fit equations are:

Complete th following script.
x = (years-1900)/50;
coef1 = polyfit(x,pop,1)  % linear
coef2 = polyfit(x,pop,2) % Quad
coef3 = polyfit(x,pop,3 )  % Cubic

3. Plotting the Curves
Create sections with any number of text and code lines.
We can plot the linear, quadratic, and cubic curves fitted to the data. We'll use the polyval function to evaluate the fitted polynomials at the points in x. Complete the following script
pred1 = polyval(coef1,x);
pred2 = polyval( coef2,x );
pred3 = polyval( coef3,x );
[pred1; pred2; pred3]
Now let's plot the predicted values for each polynomial.
hold on
plot(years,pred1)
plot(years,pred2  )
plot(years,pred3  )
ylim([50 300])
legend('Data', 'Linear', 'Quadratic' ,'Cubic')
hold off


Question 3 - Sinusoidal waves (25pt)
1. Integral of waves (10pt)
A relationship between an input and an output is given by

where  and  are the input and the output, respectively. Compute  for  ranging from 0 to 0.2 with 0.001 interval (201 samples), when the input is given by:

Set the parameters to  and .  Plot the resulting output function by completing the following script.
% Write your codes here
t = 0:0.001:0.2; % Set the output time array
R = 0.01; C = 4;
X = zeros(1,length(t));
for k=1:length(t)
F = @(s) exp(-s./(R*C)).*(sin(100*pi*(t(k)-s)).*(s<=t(k))+0.*(s>t(k)));
X(k) = integral(F , 0 , inf )/(R*C); % Find how to use this in help
end

figure
plot(t,X)
xlabel('t')
ylabel('X(t)')
Note: Beware that the input function becomes zero when its variable is negative. So, you have to be careful with the integral range. 

2. Use the fft to find the frequencies of the combined waves (15pt)
First, generate the combined sinusoidal wave as done below.
% Generate example time series
t = 0:1/1000:0.2-1/1000; 
% Sampled at 1 ms for .2 sec. Make the sample nuber even. 
% This works better for FFT

% 3 freqeuncies
w1 = 2*pi*60;
w2 = 2*pi*71;
w3 = 2*pi*89;

% 3 amplitudes
A1 = 1;
A2 = 1/2;
A3 = 1/3;

% generate the three sinusoides
f1 = A1*sin(w1*t);
f2 = A2*sin(w2*t);
f3 = A3*sin(w3*t);
Then, add noise to the amplitude of each sinusoid and shift its phase randomly. I will leave the variance of the noise to your decision. Plot the resulting sum of the three waves.
f=f1+f2+f3+2.5*gallery('normaldata',size(t),4);
plot(t,f) % f is the combined wave 
Use fft to find the three frequencies.
F = fft(f);
W = (0:length(F)-1)*1000/length(F); 
% Complet the rest
n = length(t);                         
fshift = W ;
yshift = fftshift(F); %Shifts zero-frequency components to the center 
plot(fshift,abs(yshift).^2/n)
% Normalising fft to get the correct values of the amplitudes.
xlabel('Hz')


Question 4 - Moving average analysis of stock index (25pt)
Use the centred moving average to analyze the stock market data. 

Analyze the stock market data from FTSE100. Download ftse100.mat, which is in `table' format, so you need to find a way to use a table data in Matlab. Write you analysis of this particular stock market movement in 100 ~ 150 words.
load ftse100.mat
stackedplot(ftse100)

tm = table2timetable(ftse100);
tm.Properties
tmw=flip(tm);

ma1= movavg(tmw.VarName2,'exponential',5);
ma2= movavg(tmw.VarName2,'simple',5);
ma3= movavg(tmw.VarName2,'exponential',50);
ma4= movavg(tmw.VarName2,'simple',50);
ma5= movmean(tmw.VarName2,50);
 
date=tmw.Feb2018;
plot(date,ma1,date,ma2,date,ma3,date,ma4,date,ma5,date,tmw.VarName2)
legend({'EXP5-MA','S5-MA','EXP50-MA','S50-MA','S50-MA-MEAN','ORG'},'Location',"northoutside")
Analysis:
First, I plot the original data. It shows the table FTSE100 contains the stock price from 28-Feb-2018 to 13-Jun-2017. The order is reversed, so I flip it to get the right order of the stock.
Then, I use the method of Moving Average to smooth the data and cut down the noise by the function "movavg" and "movmean".  
I compare different types of Moving Average - simple (SMA) and exponential (EMA). As the lines shown in the figure, EMA reacts more quickly to changes than the SMA does, due to the additional weighting on recent price data. 
Besides, I set moving average length to 5 days and 50 days. 5-day moving average adds up the five most recent daily prices and divides it by five to create a new average each day.  It more closely tracks the actual stock prices and shows the stock market has some a lot of fluctuations. The 50-day moving average indicates that the stock price in 2017 is generally stable, as the line is relatively flat. But in the first quarter of 2018, it has an obvious peak followed by a slide.




